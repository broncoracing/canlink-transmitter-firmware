ARM GAS  /tmp/ccO5MQLF.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB135:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccO5MQLF.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** CAN_HandleTypeDef hcan;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** UART_HandleTypeDef huart2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_CAN_Init(void);
  56:Core/Src/main.c **** static void MX_CRC_Init(void);
  57:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE END 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Core/Src/main.c ****   HAL_Init();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Configure the system clock */
  87:Core/Src/main.c ****   SystemClock_Config();
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccO5MQLF.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Initialize all configured peripherals */
  94:Core/Src/main.c ****   MX_GPIO_Init();
  95:Core/Src/main.c ****   MX_CAN_Init();
  96:Core/Src/main.c ****   MX_CRC_Init();
  97:Core/Src/main.c ****   MX_USART2_UART_Init();
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   
 101:Core/Src/main.c ****   /* USER CODE END 2 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Infinite loop */
 104:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 105:Core/Src/main.c ****   while (1)
 106:Core/Src/main.c ****   {
 107:Core/Src/main.c ****     /* USER CODE END WHILE */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 110:Core/Src/main.c ****   }
 111:Core/Src/main.c ****   /* USER CODE END 3 */
 112:Core/Src/main.c **** }
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief System Clock Configuration
 116:Core/Src/main.c ****   * @retval None
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** void SystemClock_Config(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 125:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 126:Core/Src/main.c ****   */
 127:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 135:Core/Src/main.c ****   {
 136:Core/Src/main.c ****     Error_Handler();
 137:Core/Src/main.c ****   }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/ccO5MQLF.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 153:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 154:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** }
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /**
 161:Core/Src/main.c ****   * @brief CAN Initialization Function
 162:Core/Src/main.c ****   * @param None
 163:Core/Src/main.c ****   * @retval None
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** static void MX_CAN_Init(void)
 166:Core/Src/main.c **** {
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 0 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END CAN_Init 0 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 1 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE END CAN_Init 1 */
 175:Core/Src/main.c ****   hcan.Instance = CAN;
 176:Core/Src/main.c ****   hcan.Init.Prescaler = 9;
 177:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 178:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 179:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_6TQ;
 180:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 181:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 182:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 183:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 184:Core/Src/main.c ****   hcan.Init.AutoRetransmission = ENABLE;
 185:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 186:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 187:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 188:Core/Src/main.c ****   {
 189:Core/Src/main.c ****     Error_Handler();
 190:Core/Src/main.c ****   }
 191:Core/Src/main.c ****   /* USER CODE BEGIN CAN_Init 2 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END CAN_Init 2 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** }
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** /**
 198:Core/Src/main.c ****   * @brief CRC Initialization Function
 199:Core/Src/main.c ****   * @param None
 200:Core/Src/main.c ****   * @retval None
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** static void MX_CRC_Init(void)
ARM GAS  /tmp/ccO5MQLF.s 			page 5


 203:Core/Src/main.c **** {
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 212:Core/Src/main.c ****   hcrc.Instance = CRC;
 213:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 214:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 215:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 216:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 217:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 218:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 219:Core/Src/main.c ****   {
 220:Core/Src/main.c ****     Error_Handler();
 221:Core/Src/main.c ****   }
 222:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /**
 229:Core/Src/main.c ****   * @brief USART2 Initialization Function
 230:Core/Src/main.c ****   * @param None
 231:Core/Src/main.c ****   * @retval None
 232:Core/Src/main.c ****   */
 233:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 234:Core/Src/main.c **** {
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 243:Core/Src/main.c ****   huart2.Instance = USART2;
 244:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 245:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 246:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 247:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 248:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 249:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 250:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 251:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 252:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 253:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****     Error_Handler();
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
ARM GAS  /tmp/ccO5MQLF.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** }
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** /**
 264:Core/Src/main.c ****   * @brief GPIO Initialization Function
 265:Core/Src/main.c ****   * @param None
 266:Core/Src/main.c ****   * @retval None
 267:Core/Src/main.c ****   */
 268:Core/Src/main.c **** static void MX_GPIO_Init(void)
 269:Core/Src/main.c **** {
  28              		.loc 1 269 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 40
 270:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 270 3 view .LVU1
  39              		.loc 1 270 20 is_stmt 0 view .LVU2
  40 0004 0024     		movs	r4, #0
  41 0006 0394     		str	r4, [sp, #12]
  42 0008 0494     		str	r4, [sp, #16]
  43 000a 0594     		str	r4, [sp, #20]
  44 000c 0694     		str	r4, [sp, #24]
  45 000e 0794     		str	r4, [sp, #28]
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 273:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  46              		.loc 1 273 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 273 3 view .LVU4
  49              		.loc 1 273 3 view .LVU5
  50 0010 134B     		ldr	r3, .L3
  51 0012 5A69     		ldr	r2, [r3, #20]
  52 0014 42F48002 		orr	r2, r2, #4194304
  53 0018 5A61     		str	r2, [r3, #20]
  54              		.loc 1 273 3 view .LVU6
  55 001a 5A69     		ldr	r2, [r3, #20]
  56 001c 02F48002 		and	r2, r2, #4194304
  57 0020 0192     		str	r2, [sp, #4]
  58              		.loc 1 273 3 view .LVU7
  59 0022 019A     		ldr	r2, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 273 3 view .LVU8
 274:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 274 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 274 3 view .LVU10
  65              		.loc 1 274 3 view .LVU11
  66 0024 5A69     		ldr	r2, [r3, #20]
  67 0026 42F40032 		orr	r2, r2, #131072
  68 002a 5A61     		str	r2, [r3, #20]
  69              		.loc 1 274 3 view .LVU12
ARM GAS  /tmp/ccO5MQLF.s 			page 7


  70 002c 5B69     		ldr	r3, [r3, #20]
  71 002e 03F40033 		and	r3, r3, #131072
  72 0032 0293     		str	r3, [sp, #8]
  73              		.loc 1 274 3 view .LVU13
  74 0034 029B     		ldr	r3, [sp, #8]
  75              	.LBE5:
  76              		.loc 1 274 3 view .LVU14
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 277:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  77              		.loc 1 277 3 view .LVU15
  78 0036 2246     		mov	r2, r4
  79 0038 4FF40071 		mov	r1, #512
  80 003c 4FF09040 		mov	r0, #1207959552
  81 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  82              	.LVL0:
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 280:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
  83              		.loc 1 280 3 view .LVU16
  84              		.loc 1 280 23 is_stmt 0 view .LVU17
  85 0044 4FF40073 		mov	r3, #512
  86 0048 0393     		str	r3, [sp, #12]
 281:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  87              		.loc 1 281 3 is_stmt 1 view .LVU18
  88              		.loc 1 281 24 is_stmt 0 view .LVU19
  89 004a 0123     		movs	r3, #1
  90 004c 0493     		str	r3, [sp, #16]
 282:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  91              		.loc 1 282 3 is_stmt 1 view .LVU20
  92              		.loc 1 282 24 is_stmt 0 view .LVU21
  93 004e 0594     		str	r4, [sp, #20]
 283:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  94              		.loc 1 283 3 is_stmt 1 view .LVU22
  95              		.loc 1 283 25 is_stmt 0 view .LVU23
  96 0050 0694     		str	r4, [sp, #24]
 284:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
  97              		.loc 1 284 3 is_stmt 1 view .LVU24
  98 0052 03A9     		add	r1, sp, #12
  99 0054 4FF09040 		mov	r0, #1207959552
 100 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 101              	.LVL1:
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** }
 102              		.loc 1 286 1 is_stmt 0 view .LVU25
 103 005c 08B0     		add	sp, sp, #32
 104              		.cfi_def_cfa_offset 8
 105              		@ sp needed
 106 005e 10BD     		pop	{r4, pc}
 107              	.L4:
 108              		.align	2
 109              	.L3:
 110 0060 00100240 		.word	1073876992
 111              		.cfi_endproc
 112              	.LFE135:
 114              		.section	.text.Error_Handler,"ax",%progbits
 115              		.align	1
ARM GAS  /tmp/ccO5MQLF.s 			page 8


 116              		.global	Error_Handler
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	Error_Handler:
 122              	.LFB136:
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /* USER CODE END 4 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** /**
 293:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 294:Core/Src/main.c ****   * @retval None
 295:Core/Src/main.c ****   */
 296:Core/Src/main.c **** void Error_Handler(void)
 297:Core/Src/main.c **** {
 123              		.loc 1 297 1 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ Volatile: function does not return.
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 298:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 299:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 300:Core/Src/main.c ****   __disable_irq();
 129              		.loc 1 300 3 view .LVU27
 130              	.LBB6:
 131              	.LBI6:
 132              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccO5MQLF.s 			page 9


  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
ARM GAS  /tmp/ccO5MQLF.s 			page 10


  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 133              		.loc 2 140 27 view .LVU28
ARM GAS  /tmp/ccO5MQLF.s 			page 11


 134              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 135              		.loc 2 142 3 view .LVU29
 136              		.syntax unified
 137              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 138 0000 72B6     		cpsid i
 139              	@ 0 "" 2
 140              		.thumb
 141              		.syntax unified
 142              	.L6:
 143              	.LBE7:
 144              	.LBE6:
 301:Core/Src/main.c ****   while (1)
 145              		.loc 1 301 3 discriminator 1 view .LVU30
 302:Core/Src/main.c ****   {
 303:Core/Src/main.c ****   }
 146              		.loc 1 303 3 discriminator 1 view .LVU31
 301:Core/Src/main.c ****   while (1)
 147              		.loc 1 301 9 discriminator 1 view .LVU32
 148 0002 FEE7     		b	.L6
 149              		.cfi_endproc
 150              	.LFE136:
 152              		.section	.text.MX_CAN_Init,"ax",%progbits
 153              		.align	1
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 158              	MX_CAN_Init:
 159              	.LFB132:
 166:Core/Src/main.c **** 
 160              		.loc 1 166 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164 0000 08B5     		push	{r3, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 3, -8
 167              		.cfi_offset 14, -4
 175:Core/Src/main.c ****   hcan.Init.Prescaler = 9;
 168              		.loc 1 175 3 view .LVU34
 175:Core/Src/main.c ****   hcan.Init.Prescaler = 9;
 169              		.loc 1 175 17 is_stmt 0 view .LVU35
 170 0002 0C48     		ldr	r0, .L11
 171 0004 0C4B     		ldr	r3, .L11+4
 172 0006 0360     		str	r3, [r0]
 176:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 173              		.loc 1 176 3 is_stmt 1 view .LVU36
 176:Core/Src/main.c ****   hcan.Init.Mode = CAN_MODE_NORMAL;
 174              		.loc 1 176 23 is_stmt 0 view .LVU37
 175 0008 0923     		movs	r3, #9
 176 000a 4360     		str	r3, [r0, #4]
 177:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 177              		.loc 1 177 3 is_stmt 1 view .LVU38
 177:Core/Src/main.c ****   hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 178              		.loc 1 177 18 is_stmt 0 view .LVU39
 179 000c 0023     		movs	r3, #0
ARM GAS  /tmp/ccO5MQLF.s 			page 12


 180 000e 8360     		str	r3, [r0, #8]
 178:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_6TQ;
 181              		.loc 1 178 3 is_stmt 1 view .LVU40
 178:Core/Src/main.c ****   hcan.Init.TimeSeg1 = CAN_BS1_6TQ;
 182              		.loc 1 178 27 is_stmt 0 view .LVU41
 183 0010 C360     		str	r3, [r0, #12]
 179:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 184              		.loc 1 179 3 is_stmt 1 view .LVU42
 179:Core/Src/main.c ****   hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 185              		.loc 1 179 22 is_stmt 0 view .LVU43
 186 0012 4FF4A022 		mov	r2, #327680
 187 0016 0261     		str	r2, [r0, #16]
 180:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 188              		.loc 1 180 3 is_stmt 1 view .LVU44
 180:Core/Src/main.c ****   hcan.Init.TimeTriggeredMode = DISABLE;
 189              		.loc 1 180 22 is_stmt 0 view .LVU45
 190 0018 4361     		str	r3, [r0, #20]
 181:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 191              		.loc 1 181 3 is_stmt 1 view .LVU46
 181:Core/Src/main.c ****   hcan.Init.AutoBusOff = DISABLE;
 192              		.loc 1 181 31 is_stmt 0 view .LVU47
 193 001a 0376     		strb	r3, [r0, #24]
 182:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 194              		.loc 1 182 3 is_stmt 1 view .LVU48
 182:Core/Src/main.c ****   hcan.Init.AutoWakeUp = DISABLE;
 195              		.loc 1 182 24 is_stmt 0 view .LVU49
 196 001c 4376     		strb	r3, [r0, #25]
 183:Core/Src/main.c ****   hcan.Init.AutoRetransmission = ENABLE;
 197              		.loc 1 183 3 is_stmt 1 view .LVU50
 183:Core/Src/main.c ****   hcan.Init.AutoRetransmission = ENABLE;
 198              		.loc 1 183 24 is_stmt 0 view .LVU51
 199 001e 8376     		strb	r3, [r0, #26]
 184:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 200              		.loc 1 184 3 is_stmt 1 view .LVU52
 184:Core/Src/main.c ****   hcan.Init.ReceiveFifoLocked = DISABLE;
 201              		.loc 1 184 32 is_stmt 0 view .LVU53
 202 0020 0122     		movs	r2, #1
 203 0022 C276     		strb	r2, [r0, #27]
 185:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 204              		.loc 1 185 3 is_stmt 1 view .LVU54
 185:Core/Src/main.c ****   hcan.Init.TransmitFifoPriority = DISABLE;
 205              		.loc 1 185 31 is_stmt 0 view .LVU55
 206 0024 0377     		strb	r3, [r0, #28]
 186:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 207              		.loc 1 186 3 is_stmt 1 view .LVU56
 186:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan) != HAL_OK)
 208              		.loc 1 186 34 is_stmt 0 view .LVU57
 209 0026 4377     		strb	r3, [r0, #29]
 187:Core/Src/main.c ****   {
 210              		.loc 1 187 3 is_stmt 1 view .LVU58
 187:Core/Src/main.c ****   {
 211              		.loc 1 187 7 is_stmt 0 view .LVU59
 212 0028 FFF7FEFF 		bl	HAL_CAN_Init
 213              	.LVL2:
 187:Core/Src/main.c ****   {
 214              		.loc 1 187 6 view .LVU60
 215 002c 00B9     		cbnz	r0, .L10
ARM GAS  /tmp/ccO5MQLF.s 			page 13


 195:Core/Src/main.c **** 
 216              		.loc 1 195 1 view .LVU61
 217 002e 08BD     		pop	{r3, pc}
 218              	.L10:
 189:Core/Src/main.c ****   }
 219              		.loc 1 189 5 is_stmt 1 view .LVU62
 220 0030 FFF7FEFF 		bl	Error_Handler
 221              	.LVL3:
 222              	.L12:
 223              		.align	2
 224              	.L11:
 225 0034 00000000 		.word	.LANCHOR0
 226 0038 00640040 		.word	1073767424
 227              		.cfi_endproc
 228              	.LFE132:
 230              		.section	.text.MX_CRC_Init,"ax",%progbits
 231              		.align	1
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	MX_CRC_Init:
 237              	.LFB133:
 203:Core/Src/main.c **** 
 238              		.loc 1 203 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 0000 08B5     		push	{r3, lr}
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 3, -8
 245              		.cfi_offset 14, -4
 212:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 246              		.loc 1 212 3 view .LVU64
 212:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 247              		.loc 1 212 17 is_stmt 0 view .LVU65
 248 0002 0848     		ldr	r0, .L17
 249 0004 084B     		ldr	r3, .L17+4
 250 0006 0360     		str	r3, [r0]
 213:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 251              		.loc 1 213 3 is_stmt 1 view .LVU66
 213:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 252              		.loc 1 213 34 is_stmt 0 view .LVU67
 253 0008 0023     		movs	r3, #0
 254 000a 0371     		strb	r3, [r0, #4]
 214:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 255              		.loc 1 214 3 is_stmt 1 view .LVU68
 214:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 256              		.loc 1 214 33 is_stmt 0 view .LVU69
 257 000c 4371     		strb	r3, [r0, #5]
 215:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 258              		.loc 1 215 3 is_stmt 1 view .LVU70
 215:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 259              		.loc 1 215 36 is_stmt 0 view .LVU71
 260 000e 4361     		str	r3, [r0, #20]
 216:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 261              		.loc 1 216 3 is_stmt 1 view .LVU72
 216:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
ARM GAS  /tmp/ccO5MQLF.s 			page 14


 262              		.loc 1 216 37 is_stmt 0 view .LVU73
 263 0010 8361     		str	r3, [r0, #24]
 217:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 264              		.loc 1 217 3 is_stmt 1 view .LVU74
 217:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 265              		.loc 1 217 24 is_stmt 0 view .LVU75
 266 0012 0123     		movs	r3, #1
 267 0014 0362     		str	r3, [r0, #32]
 218:Core/Src/main.c ****   {
 268              		.loc 1 218 3 is_stmt 1 view .LVU76
 218:Core/Src/main.c ****   {
 269              		.loc 1 218 7 is_stmt 0 view .LVU77
 270 0016 FFF7FEFF 		bl	HAL_CRC_Init
 271              	.LVL4:
 218:Core/Src/main.c ****   {
 272              		.loc 1 218 6 view .LVU78
 273 001a 00B9     		cbnz	r0, .L16
 226:Core/Src/main.c **** 
 274              		.loc 1 226 1 view .LVU79
 275 001c 08BD     		pop	{r3, pc}
 276              	.L16:
 220:Core/Src/main.c ****   }
 277              		.loc 1 220 5 is_stmt 1 view .LVU80
 278 001e FFF7FEFF 		bl	Error_Handler
 279              	.LVL5:
 280              	.L18:
 281 0022 00BF     		.align	2
 282              	.L17:
 283 0024 00000000 		.word	.LANCHOR1
 284 0028 00300240 		.word	1073885184
 285              		.cfi_endproc
 286              	.LFE133:
 288              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 289              		.align	1
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 294              	MX_USART2_UART_Init:
 295              	.LFB134:
 234:Core/Src/main.c **** 
 296              		.loc 1 234 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 08B5     		push	{r3, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 3, -8
 303              		.cfi_offset 14, -4
 243:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 304              		.loc 1 243 3 view .LVU82
 243:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 305              		.loc 1 243 19 is_stmt 0 view .LVU83
 306 0002 0B48     		ldr	r0, .L23
 307 0004 0B4B     		ldr	r3, .L23+4
 308 0006 0360     		str	r3, [r0]
 244:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 309              		.loc 1 244 3 is_stmt 1 view .LVU84
ARM GAS  /tmp/ccO5MQLF.s 			page 15


 244:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 310              		.loc 1 244 24 is_stmt 0 view .LVU85
 311 0008 4FF46133 		mov	r3, #230400
 312 000c 4360     		str	r3, [r0, #4]
 245:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 313              		.loc 1 245 3 is_stmt 1 view .LVU86
 245:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 314              		.loc 1 245 26 is_stmt 0 view .LVU87
 315 000e 0023     		movs	r3, #0
 316 0010 8360     		str	r3, [r0, #8]
 246:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 317              		.loc 1 246 3 is_stmt 1 view .LVU88
 246:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 318              		.loc 1 246 24 is_stmt 0 view .LVU89
 319 0012 C360     		str	r3, [r0, #12]
 247:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 320              		.loc 1 247 3 is_stmt 1 view .LVU90
 247:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 321              		.loc 1 247 22 is_stmt 0 view .LVU91
 322 0014 0361     		str	r3, [r0, #16]
 248:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 323              		.loc 1 248 3 is_stmt 1 view .LVU92
 248:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 324              		.loc 1 248 20 is_stmt 0 view .LVU93
 325 0016 0C22     		movs	r2, #12
 326 0018 4261     		str	r2, [r0, #20]
 249:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 327              		.loc 1 249 3 is_stmt 1 view .LVU94
 249:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 328              		.loc 1 249 25 is_stmt 0 view .LVU95
 329 001a 8361     		str	r3, [r0, #24]
 250:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 330              		.loc 1 250 3 is_stmt 1 view .LVU96
 250:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 331              		.loc 1 250 28 is_stmt 0 view .LVU97
 332 001c C361     		str	r3, [r0, #28]
 251:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 333              		.loc 1 251 3 is_stmt 1 view .LVU98
 251:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 334              		.loc 1 251 30 is_stmt 0 view .LVU99
 335 001e 0362     		str	r3, [r0, #32]
 252:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 336              		.loc 1 252 3 is_stmt 1 view .LVU100
 252:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 337              		.loc 1 252 38 is_stmt 0 view .LVU101
 338 0020 4362     		str	r3, [r0, #36]
 253:Core/Src/main.c ****   {
 339              		.loc 1 253 3 is_stmt 1 view .LVU102
 253:Core/Src/main.c ****   {
 340              		.loc 1 253 7 is_stmt 0 view .LVU103
 341 0022 FFF7FEFF 		bl	HAL_UART_Init
 342              	.LVL6:
 253:Core/Src/main.c ****   {
 343              		.loc 1 253 6 view .LVU104
 344 0026 00B9     		cbnz	r0, .L22
 261:Core/Src/main.c **** 
 345              		.loc 1 261 1 view .LVU105
ARM GAS  /tmp/ccO5MQLF.s 			page 16


 346 0028 08BD     		pop	{r3, pc}
 347              	.L22:
 255:Core/Src/main.c ****   }
 348              		.loc 1 255 5 is_stmt 1 view .LVU106
 349 002a FFF7FEFF 		bl	Error_Handler
 350              	.LVL7:
 351              	.L24:
 352 002e 00BF     		.align	2
 353              	.L23:
 354 0030 00000000 		.word	.LANCHOR2
 355 0034 00440040 		.word	1073759232
 356              		.cfi_endproc
 357              	.LFE134:
 359              		.section	.text.SystemClock_Config,"ax",%progbits
 360              		.align	1
 361              		.global	SystemClock_Config
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 366              	SystemClock_Config:
 367              	.LFB131:
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 368              		.loc 1 119 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 152
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 00B5     		push	{lr}
 373              		.cfi_def_cfa_offset 4
 374              		.cfi_offset 14, -4
 375 0002 A7B0     		sub	sp, sp, #156
 376              		.cfi_def_cfa_offset 160
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 377              		.loc 1 120 3 view .LVU108
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 378              		.loc 1 120 22 is_stmt 0 view .LVU109
 379 0004 2822     		movs	r2, #40
 380 0006 0021     		movs	r1, #0
 381 0008 1CA8     		add	r0, sp, #112
 382 000a FFF7FEFF 		bl	memset
 383              	.LVL8:
 121:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 384              		.loc 1 121 3 is_stmt 1 view .LVU110
 121:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 385              		.loc 1 121 22 is_stmt 0 view .LVU111
 386 000e 0021     		movs	r1, #0
 387 0010 1791     		str	r1, [sp, #92]
 388 0012 1891     		str	r1, [sp, #96]
 389 0014 1991     		str	r1, [sp, #100]
 390 0016 1A91     		str	r1, [sp, #104]
 391 0018 1B91     		str	r1, [sp, #108]
 122:Core/Src/main.c **** 
 392              		.loc 1 122 3 is_stmt 1 view .LVU112
 122:Core/Src/main.c **** 
 393              		.loc 1 122 28 is_stmt 0 view .LVU113
 394 001a 5822     		movs	r2, #88
 395 001c 01A8     		add	r0, sp, #4
 396 001e FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccO5MQLF.s 			page 17


 397              	.LVL9:
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 398              		.loc 1 127 3 is_stmt 1 view .LVU114
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 399              		.loc 1 127 36 is_stmt 0 view .LVU115
 400 0022 0122     		movs	r2, #1
 401 0024 1C92     		str	r2, [sp, #112]
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 402              		.loc 1 128 3 is_stmt 1 view .LVU116
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 403              		.loc 1 128 30 is_stmt 0 view .LVU117
 404 0026 4FF48033 		mov	r3, #65536
 405 002a 1D93     		str	r3, [sp, #116]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 406              		.loc 1 129 3 is_stmt 1 view .LVU118
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 407              		.loc 1 129 30 is_stmt 0 view .LVU119
 408 002c 1F92     		str	r2, [sp, #124]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 409              		.loc 1 130 3 is_stmt 1 view .LVU120
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 410              		.loc 1 130 34 is_stmt 0 view .LVU121
 411 002e 0222     		movs	r2, #2
 412 0030 2292     		str	r2, [sp, #136]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 413              		.loc 1 131 3 is_stmt 1 view .LVU122
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 414              		.loc 1 131 35 is_stmt 0 view .LVU123
 415 0032 2393     		str	r3, [sp, #140]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 416              		.loc 1 132 3 is_stmt 1 view .LVU124
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 417              		.loc 1 132 32 is_stmt 0 view .LVU125
 418 0034 4FF4E013 		mov	r3, #1835008
 419 0038 2493     		str	r3, [sp, #144]
 133:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 420              		.loc 1 133 3 is_stmt 1 view .LVU126
 134:Core/Src/main.c ****   {
 421              		.loc 1 134 3 view .LVU127
 134:Core/Src/main.c ****   {
 422              		.loc 1 134 7 is_stmt 0 view .LVU128
 423 003a 1CA8     		add	r0, sp, #112
 424 003c FFF7FEFF 		bl	HAL_RCC_OscConfig
 425              	.LVL10:
 134:Core/Src/main.c ****   {
 426              		.loc 1 134 6 view .LVU129
 427 0040 C0B9     		cbnz	r0, .L30
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 428              		.loc 1 141 3 is_stmt 1 view .LVU130
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 429              		.loc 1 141 31 is_stmt 0 view .LVU131
 430 0042 0F23     		movs	r3, #15
 431 0044 1793     		str	r3, [sp, #92]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 432              		.loc 1 143 3 is_stmt 1 view .LVU132
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 433              		.loc 1 143 34 is_stmt 0 view .LVU133
ARM GAS  /tmp/ccO5MQLF.s 			page 18


 434 0046 0221     		movs	r1, #2
 435 0048 1891     		str	r1, [sp, #96]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 436              		.loc 1 144 3 is_stmt 1 view .LVU134
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 437              		.loc 1 144 35 is_stmt 0 view .LVU135
 438 004a 0023     		movs	r3, #0
 439 004c 1993     		str	r3, [sp, #100]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 440              		.loc 1 145 3 is_stmt 1 view .LVU136
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 441              		.loc 1 145 36 is_stmt 0 view .LVU137
 442 004e 4FF48062 		mov	r2, #1024
 443 0052 1A92     		str	r2, [sp, #104]
 146:Core/Src/main.c **** 
 444              		.loc 1 146 3 is_stmt 1 view .LVU138
 146:Core/Src/main.c **** 
 445              		.loc 1 146 36 is_stmt 0 view .LVU139
 446 0054 1B93     		str	r3, [sp, #108]
 148:Core/Src/main.c ****   {
 447              		.loc 1 148 3 is_stmt 1 view .LVU140
 148:Core/Src/main.c ****   {
 448              		.loc 1 148 7 is_stmt 0 view .LVU141
 449 0056 17A8     		add	r0, sp, #92
 450 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 451              	.LVL11:
 148:Core/Src/main.c ****   {
 452              		.loc 1 148 6 view .LVU142
 453 005c 60B9     		cbnz	r0, .L31
 152:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 454              		.loc 1 152 3 is_stmt 1 view .LVU143
 152:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 455              		.loc 1 152 38 is_stmt 0 view .LVU144
 456 005e 0223     		movs	r3, #2
 457 0060 0193     		str	r3, [sp, #4]
 153:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 458              		.loc 1 153 3 is_stmt 1 view .LVU145
 153:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 459              		.loc 1 153 38 is_stmt 0 view .LVU146
 460 0062 0023     		movs	r3, #0
 461 0064 0493     		str	r3, [sp, #16]
 154:Core/Src/main.c ****   {
 462              		.loc 1 154 3 is_stmt 1 view .LVU147
 154:Core/Src/main.c ****   {
 463              		.loc 1 154 7 is_stmt 0 view .LVU148
 464 0066 01A8     		add	r0, sp, #4
 465 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 466              	.LVL12:
 154:Core/Src/main.c ****   {
 467              		.loc 1 154 6 view .LVU149
 468 006c 30B9     		cbnz	r0, .L32
 158:Core/Src/main.c **** 
 469              		.loc 1 158 1 view .LVU150
 470 006e 27B0     		add	sp, sp, #156
 471              		.cfi_remember_state
 472              		.cfi_def_cfa_offset 4
 473              		@ sp needed
ARM GAS  /tmp/ccO5MQLF.s 			page 19


 474 0070 5DF804FB 		ldr	pc, [sp], #4
 475              	.L30:
 476              		.cfi_restore_state
 136:Core/Src/main.c ****   }
 477              		.loc 1 136 5 is_stmt 1 view .LVU151
 478 0074 FFF7FEFF 		bl	Error_Handler
 479              	.LVL13:
 480              	.L31:
 150:Core/Src/main.c ****   }
 481              		.loc 1 150 5 view .LVU152
 482 0078 FFF7FEFF 		bl	Error_Handler
 483              	.LVL14:
 484              	.L32:
 156:Core/Src/main.c ****   }
 485              		.loc 1 156 5 view .LVU153
 486 007c FFF7FEFF 		bl	Error_Handler
 487              	.LVL15:
 488              		.cfi_endproc
 489              	.LFE131:
 491              		.section	.text.main,"ax",%progbits
 492              		.align	1
 493              		.global	main
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 498              	main:
 499              	.LFB130:
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 500              		.loc 1 72 1 view -0
 501              		.cfi_startproc
 502              		@ Volatile: function does not return.
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505 0000 08B5     		push	{r3, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 3, -8
 508              		.cfi_offset 14, -4
  80:Core/Src/main.c **** 
 509              		.loc 1 80 3 view .LVU155
 510 0002 FFF7FEFF 		bl	HAL_Init
 511              	.LVL16:
  87:Core/Src/main.c **** 
 512              		.loc 1 87 3 view .LVU156
 513 0006 FFF7FEFF 		bl	SystemClock_Config
 514              	.LVL17:
  94:Core/Src/main.c ****   MX_CAN_Init();
 515              		.loc 1 94 3 view .LVU157
 516 000a FFF7FEFF 		bl	MX_GPIO_Init
 517              	.LVL18:
  95:Core/Src/main.c ****   MX_CRC_Init();
 518              		.loc 1 95 3 view .LVU158
 519 000e FFF7FEFF 		bl	MX_CAN_Init
 520              	.LVL19:
  96:Core/Src/main.c ****   MX_USART2_UART_Init();
 521              		.loc 1 96 3 view .LVU159
 522 0012 FFF7FEFF 		bl	MX_CRC_Init
 523              	.LVL20:
ARM GAS  /tmp/ccO5MQLF.s 			page 20


  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 524              		.loc 1 97 3 view .LVU160
 525 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 526              	.LVL21:
 527              	.L34:
 105:Core/Src/main.c ****   {
 528              		.loc 1 105 3 discriminator 1 view .LVU161
 110:Core/Src/main.c ****   /* USER CODE END 3 */
 529              		.loc 1 110 3 discriminator 1 view .LVU162
 105:Core/Src/main.c ****   {
 530              		.loc 1 105 9 discriminator 1 view .LVU163
 531 001a FEE7     		b	.L34
 532              		.cfi_endproc
 533              	.LFE130:
 535              		.global	huart2
 536              		.global	hcrc
 537              		.global	hcan
 538              		.section	.bss.hcan,"aw",%nobits
 539              		.align	2
 540              		.set	.LANCHOR0,. + 0
 543              	hcan:
 544 0000 00000000 		.space	100
 544      00000000 
 544      00000000 
 544      00000000 
 544      00000000 
 545              		.section	.bss.hcrc,"aw",%nobits
 546              		.align	2
 547              		.set	.LANCHOR1,. + 0
 550              	hcrc:
 551 0000 00000000 		.space	36
 551      00000000 
 551      00000000 
 551      00000000 
 551      00000000 
 552              		.section	.bss.huart2,"aw",%nobits
 553              		.align	2
 554              		.set	.LANCHOR2,. + 0
 557              	huart2:
 558 0000 00000000 		.space	136
 558      00000000 
 558      00000000 
 558      00000000 
 558      00000000 
 559              		.text
 560              	.Letext0:
 561              		.file 3 "/home/jack/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 562              		.file 4 "/home/jack/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 563              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 564              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 565              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 566              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 567              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 568              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 569              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 570              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 571              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_crc.h"
ARM GAS  /tmp/ccO5MQLF.s 			page 21


 572              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 573              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 574              		.file 16 "<built-in>"
ARM GAS  /tmp/ccO5MQLF.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccO5MQLF.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccO5MQLF.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccO5MQLF.s:110    .text.MX_GPIO_Init:0000000000000060 $d
     /tmp/ccO5MQLF.s:115    .text.Error_Handler:0000000000000000 $t
     /tmp/ccO5MQLF.s:121    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccO5MQLF.s:153    .text.MX_CAN_Init:0000000000000000 $t
     /tmp/ccO5MQLF.s:158    .text.MX_CAN_Init:0000000000000000 MX_CAN_Init
     /tmp/ccO5MQLF.s:225    .text.MX_CAN_Init:0000000000000034 $d
     /tmp/ccO5MQLF.s:231    .text.MX_CRC_Init:0000000000000000 $t
     /tmp/ccO5MQLF.s:236    .text.MX_CRC_Init:0000000000000000 MX_CRC_Init
     /tmp/ccO5MQLF.s:283    .text.MX_CRC_Init:0000000000000024 $d
     /tmp/ccO5MQLF.s:289    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccO5MQLF.s:294    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccO5MQLF.s:354    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccO5MQLF.s:360    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccO5MQLF.s:366    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccO5MQLF.s:492    .text.main:0000000000000000 $t
     /tmp/ccO5MQLF.s:498    .text.main:0000000000000000 main
     /tmp/ccO5MQLF.s:557    .bss.huart2:0000000000000000 huart2
     /tmp/ccO5MQLF.s:550    .bss.hcrc:0000000000000000 hcrc
     /tmp/ccO5MQLF.s:543    .bss.hcan:0000000000000000 hcan
     /tmp/ccO5MQLF.s:539    .bss.hcan:0000000000000000 $d
     /tmp/ccO5MQLF.s:546    .bss.hcrc:0000000000000000 $d
     /tmp/ccO5MQLF.s:553    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_CAN_Init
HAL_CRC_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
